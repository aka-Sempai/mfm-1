political_actions = {

	GER_generic_industry_relocation = {
		priority = 10

		icon = generic_construction

		state_target = yes

		#targets = { core_states }

		target_trigger = {
			FROM = {
				#is_owned_by = GER
				OR = {
				FRA_ish_is_industrial_relocation_destiny_state = yes
				is_core_of = SOV
				is_core_of = LAT
				is_core_of = LIT
				is_core_of = EST
				}
				is_fully_controlled_by = GER
				
				
			}
		}

		target_root_trigger = {
			original_tag = GER
			GER = {
				has_war_with = SOV
			}
			has_country_flag = d_day_ready
		}

		allowed = {
			original_tag = GER
		}

		available = {
			FROM = {
				is_fully_controlled_by = GER
			}
		}

		visible = {
			FROM = {
				is_fully_controlled_by = GER
			}
			has_country_flag = d_day_ready
			FROM = {
				OR = {
					arms_factory > 0
					industrial_complex > 0
				}
			}
		}

		cancel_if_not_visible = no

		cost = 15
		
		modifier = {
			civilian_factory_use = 5
		}
		
		days_remove = 20

		complete_effect = {  #Attempt to remove 2 CIVS & 2 MILS
			custom_effect_tooltip = SOV_industry_relocation_trains_tt
			custom_effect_tooltip = SOV_industry_relocation_complete_effect_tt
			#REMOVE factories
			FROM = {
				hidden_effect = {
					set_temp_variable = { SOV_factories_counter = 0 }

					#Attempt to relocate 50%-50% of mils-civs
					set_temp_variable = { SOV_half_the_factories_to_relocate = SOV.SOV_industrial_relocation_max_factories }
					divide_temp_variable = { SOV_half_the_factories_to_relocate = 2 }
					while_loop_effect = {
						limit = {
							check_variable = { SOV_factories_counter = SOV.SOV_industrial_relocation_max_factories compare = less_than }
						}
						if = { #GO MILS (if possible)
							limit = {
								check_variable = { SOV_factories_counter = SOV_half_the_factories_to_relocate compare = less_than }
							}
							if = {
								limit = {
									arms_factory > 0
								}
								remove_building = {
									type = arms_factory
									level = 1
								}
								if = {
									limit = {
										has_state_flag = SOV_mils_removed_flag
									}
									modify_state_flag = { flag = SOV_mils_removed_flag value = 1 }
								}
								else = {
									set_state_flag = SOV_mils_removed_flag
								}
							}
							else_if = {
								limit = {
									industrial_complex > 0
								}
								remove_building = {
									type = industrial_complex
									level = 1
								}
								if = {
									limit = {
										has_state_flag = SOV_civs_removed_flag
									}
									modify_state_flag = { flag = SOV_civs_removed_flag value = 1 }
								}
								else = {
									set_state_flag = SOV_civs_removed_flag
								}
							}
						}
						else = { #GO CIVS (if possible)
							if = {
								limit = {
									industrial_complex > 0
								}
								remove_building = {
									type = industrial_complex
									level = 1
								}
								if = {
									limit = {
										has_state_flag = SOV_civs_removed_flag
									}
									modify_state_flag = { flag = SOV_civs_removed_flag value = 1 }
								}
								else = {
									set_state_flag = SOV_civs_removed_flag
								}
							}
							else_if = {
								limit = {
									arms_factory > 0
								}
								remove_building = {
									type = arms_factory
									level = 1
								}
								if = {
									limit = {
										has_state_flag = SOV_mils_removed_flag
									}
									modify_state_flag = { flag = SOV_mils_removed_flag value = 1 }
								}
								else = {
									set_state_flag = SOV_mils_removed_flag
								}
							}
						}
						add_to_temp_variable = { SOV_factories_counter = 1 }
					}
				}
			}
		}

		remove_effect = {
			custom_effect_tooltip = SOV_industry_relocation_remove_effect_tt
			#RELOCATE FACTORIES
			FROM = {
				set_temp_variable = { SOV_factories_counter = 0 }
				#Factories attempt to get relocated in 2 different states
				set_temp_variable = { SOV_half_the_factories_to_relocate = SOV.SOV_industrial_relocation_max_factories }
				divide_temp_variable = { SOV_half_the_factories_to_relocate = 2 }
				while_loop_effect = { #NOTE: Due to the seed not changing during the execution of this effect, the same state will always be chosen, UNLESS it runs out of slots -> That's the reason for this
					limit = {
						check_variable = { SOV_factories_counter = SOV_half_the_factories_to_relocate compare = less_than }
					}
					GER_relocate_industry_in_appropriate_state_effect = yes
					add_to_temp_variable = { SOV_factories_counter = 1 }
				}
			}
			custom_effect_tooltip = SOV_relocate_industry_repair_tt
			custom_effect_tooltip = SOV_relocate_industry_lose_control_tt
			add_manpower = 1000
		}
	}
	
}